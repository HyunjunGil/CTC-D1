# =====================================================
# Simple Shop Frontend - Nginx 설정 파일
# =====================================================
# 이 파일은 React SPA 애플리케이션을 위한 Nginx 설정을 정의합니다.
# SPA 라우팅, CORS, 보안, 성능 최적화 설정을 포함합니다.

# =====================================================
# 기본 설정
# =====================================================
# Nginx의 기본 동작을 정의합니다.

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 이벤트 모듈 설정
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP 모듈 설정
http {
    # =====================================================
    # 기본 MIME 타입 및 인코딩 설정
    # =====================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 문자 인코딩 설정
    charset utf-8;
    
    # =====================================================
    # 로깅 설정
    # =====================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # =====================================================
    # 성능 최적화 설정
    # =====================================================
    # 파일 전송 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # 연결 유지 설정
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # 버퍼 설정
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # =====================================================
    # 보안 설정
    # =====================================================
    # 서버 정보 숨기기
    server_tokens off;
    
    # 클릭재킹 방지
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # XSS 방지
    add_header X-XSS-Protection "1; mode=block" always;
    
    # MIME 타입 스니핑 방지
    add_header X-Content-Type-Options "nosniff" always;
    
    # 참조 정책
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # =====================================================
    # 메인 서버 블록
    # =====================================================
    server {
        # 포트 설정
        listen 80;
        server_name localhost;
        
        # 루트 디렉토리 설정
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # =====================================================
        # CORS 설정
        # =====================================================
        # Backend API에 대한 CORS 헤더 설정
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # =====================================================
        # 정적 파일 캐싱 설정
        # =====================================================
        # HTML 파일은 캐싱하지 않음 (항상 최신 버전)
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
        
        # CSS, JS 파일은 1년간 캐싱
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # 이미지 파일은 1년간 캐싱
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # 폰트 파일은 1년간 캐싱
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
        
        # =====================================================
        # SPA 라우팅 설정
        # =====================================================
        # React Router를 위한 설정
        # 모든 경로를 index.html로 리다이렉트하여 클라이언트 사이드 라우팅 지원
        location / {
            try_files $uri $uri/ /index.html;
            
            # 기본 헤더 설정
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # =====================================================
        # API 프록시 설정 (선택사항)
        # =====================================================
        # Backend API로의 프록시 설정
        # Docker Compose 환경에서 사용할 수 있습니다.
        location /api/ {
            # Backend 서비스로 프록시
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 타임아웃 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 버퍼 설정
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # =====================================================
        # 에러 페이지 설정
        # =====================================================
        # 404 에러 시 index.html로 리다이렉트 (SPA 지원)
        error_page 404 /index.html;
        
        # 5xx 에러 페이지
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # =====================================================
        # 보안 헤더 추가 설정
        # =====================================================
        # HSTS 설정 (HTTPS 사용 시)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Content Security Policy (CSP)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://localhost:8080 ws://localhost:3000;" always;
        
        # =====================================================
        # 로깅 설정
        # =====================================================
        # 특정 경로에 대한 로깅 설정
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            access_log off;
            log_not_found off;
        }
    }
    
    # =====================================================
    # 업스트림 서버 설정 (로드 밸런싱용)
    # =====================================================
    # 여러 Backend 인스턴스가 있을 때 사용
    # upstream backend_servers {
    #     server backend1:8080 weight=1;
    #     server backend2:8080 weight=1;
    #     server backend3:8080 weight=1;
    # }
}
